{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport styles from \"../style/LoginStyle\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Toast from \"react-native-toast-message\";\nimport { login } from \"../components/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (email === \"\" || password === \"\") {\n      Toast.show({\n        type: \"error\",\n        text1: \"Please fill all the fields\",\n        text2: \"error\"\n      });\n    } else {\n      login({\n        email: email,\n        password: password\n      }).then(function (res) {\n        var _res$data;\n\n        console.log(res == null ? void 0 : (_res$data = res.data) == null ? void 0 : _res$data.message);\n        navigation.push(\"dashboard\");\n      }).catch(function (err) {\n        var _err$response, _err$response$data;\n\n        Toast.show({\n          type: \"error\",\n          text1: \"\" + (err == null ? void 0 : (_err$response = err.response) == null ? void 0 : (_err$response$data = _err$response.data) == null ? void 0 : _err$response$data.error),\n          text2: \"error\"\n        });\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Toast, {\n      ref: function ref(_ref2) {\n        return Toast.setRef(_ref2);\n      }\n    }), _jsx(View, {\n      style: styles.headerWrapper,\n      children: _jsx(Text, {\n        style: styles.TextInput,\n        children: \"Login\"\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(TextInput, {\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      style: styles.input,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      placeholder: \"password\",\n      secureTextEntry: true\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Login\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","React","styles","Toast","login","Login","navigation","useState","email","setEmail","password","setPassword","handleSubmit","show","type","text1","text2","then","res","console","log","data","message","push","catch","err","response","error","container","ref","setRef","headerWrapper","TextInput","text","input","button"],"sources":["C:/Users/MILAN/Desktop/auth/app/screen/Login.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport  styles  from \"../style/LoginStyle\";\r\nimport { StyleSheet, TextInput, Text, View, Pressable } from \"react-native\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { login } from \"../components/api\";\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const handleSubmit = () => {\r\n    if (email === \"\" || password === \"\") {\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Please fill all the fields\",\r\n        text2: \"error\",\r\n      });\r\n    } else {\r\n      login({ email: email, password: password })\r\n        .then((res) => {\r\n          console.log(res?.data?.message);\r\n          navigation.push(\"dashboard\");\r\n        })\r\n        .catch((err) => {\r\n          Toast.show({\r\n            type: \"error\",\r\n            text1: `${err?.response?.data?.error}`,\r\n            text2: \"error\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Toast ref={(ref) => Toast.setRef(ref)} />\r\n\r\n      <View style={styles.headerWrapper}>\r\n        <Text style={styles.TextInput}>Login</Text>\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n\r\n      <TextInput\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        placeholder=\"password\"\r\n        secureTextEntry={true}\r\n      />\r\n\r\n      <Pressable style={styles.button} onPress={handleSubmit}>\r\n        <Text style={styles.text}>Login</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAQC,MAAR;;;;;;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,KAAT;;;AACA,eAAe,SAASC,KAAT,OAA+B;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC5C,sBAA0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,uBAAgCR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC;EAAA;EAAA,IAAOG,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAIJ,KAAK,KAAK,EAAV,IAAgBE,QAAQ,KAAK,EAAjC,EAAqC;MACnCP,KAAK,CAACU,IAAN,CAAW;QACTC,IAAI,EAAE,OADG;QAETC,KAAK,EAAE,4BAFE;QAGTC,KAAK,EAAE;MAHE,CAAX;IAKD,CAND,MAMO;MACLZ,KAAK,CAAC;QAAEI,KAAK,EAAEA,KAAT;QAAgBE,QAAQ,EAAEA;MAA1B,CAAD,CAAL,CACGO,IADH,CACQ,UAACC,GAAD,EAAS;QAAA;;QACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ,iCAAYA,GAAG,CAAEG,IAAjB,qBAAY,UAAWC,OAAvB;QACAhB,UAAU,CAACiB,IAAX,CAAgB,WAAhB;MACD,CAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;QAAA;;QACdtB,KAAK,CAACU,IAAN,CAAW;UACTC,IAAI,EAAE,OADG;UAETC,KAAK,QAAKU,GAAL,qCAAKA,GAAG,CAAEC,QAAV,2CAAK,cAAeL,IAApB,qBAAK,mBAAqBM,KAA1B,CAFI;UAGTX,KAAK,EAAE;QAHE,CAAX;MAKD,CAXH;IAYD;EACF,CArBD;;EAsBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEd,MAAM,CAAC0B,SAApB;IAAA,WACE,KAAC,KAAD;MAAO,GAAG,EAAE,aAACC,KAAD;QAAA,OAAS1B,KAAK,CAAC2B,MAAN,CAAaD,KAAb,CAAT;MAAA;IAAZ,EADF,EAGE,KAAC,IAAD;MAAM,KAAK,EAAE3B,MAAM,CAAC6B,aAApB;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAE7B,MAAM,CAAC8B,SAApB;QAAA;MAAA;IADF,EAHF,EAME,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EANF,EAQE,KAAC,SAAD;MACE,KAAK,EAAExB,KADT;MAEE,YAAY,EAAE,sBAACyB,IAAD;QAAA,OAAUxB,QAAQ,CAACwB,IAAD,CAAlB;MAAA,CAFhB;MAGE,KAAK,EAAE/B,MAAM,CAACgC,KAHhB;MAIE,WAAW,EAAC;IAJd,EARF,EAcE,KAAC,SAAD;MACE,KAAK,EAAEhC,MAAM,CAACgC,KADhB;MAEE,KAAK,EAAExB,QAFT;MAGE,YAAY,EAAE,sBAACuB,IAAD;QAAA,OAAUtB,WAAW,CAACsB,IAAD,CAArB;MAAA,CAHhB;MAIE,WAAW,EAAC,UAJd;MAKE,eAAe,EAAE;IALnB,EAdF,EAsBE,KAAC,SAAD;MAAW,KAAK,EAAE/B,MAAM,CAACiC,MAAzB;MAAiC,OAAO,EAAEvB,YAA1C;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEV,MAAM,CAAC+B,IAApB;QAAA;MAAA;IADF,EAtBF;EAAA,EADF;AA4BD"},"metadata":{},"sourceType":"module"}